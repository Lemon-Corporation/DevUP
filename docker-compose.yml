version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devup
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - devup-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - devup-network

  user-service:
    build:
      context: ./backend/UserService
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/devup
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      ACCESS_SECRET: ${ACCESS_SECRET:-super-access-secret}
      REFRESH_SECRET: ${REFRESH_SECRET:-super-refresh-secret}
    depends_on:
      - postgres
    networks:
      - devup-network

  theory-service:
    build:
      context: ./backend/theory_service
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
      FLASK_DEBUG: "1"
      FLASK_RUN_HOST: "0.0.0.0"
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/devup
    depends_on:
      - postgres
    networks:
      - devup-network

  analyze-service:
    build:
      context: ./backend/analyze-service
    ports:
      - "8000:8000"
    environment:
      POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@postgres:5432/devup
      REDIS_DSN: redis://redis:6379/0
      SECRET_KEY: "your-secret-key-here"
    depends_on:
      - postgres
      - redis
    networks:
      - devup-network

  docs-service:
    build:
      context: ./sdocs
    ports:
      - "8090:8090"
    networks:
      - devup-network

  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - theory-service
      - analyze-service
      - docs-service
    networks:
      - devup-network

networks:
  devup-network:
    driver: bridge

volumes:
  postgres-data: